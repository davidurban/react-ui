@import '../../shared/settings/borders';
@import '../../shared/settings/forms.deprecated';
@import '../../shared/tools/accessibility';
@import '../../shared/tools/forms.deprecated';
@import '../../shared/tools/icons.deprecated';

.root {
  position: relative;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  box-sizing: border-box;
  padding: 0 0.25rem 0 0;
}

.inputWrap {
  position: relative;
}

.input {
  @include form-toggle-input-styles(
    $toggle-height,
    $toggle-width,
    $checkbox-radio-top,
    0
  );
}

.toggle {
  position: absolute;
  top: ($checkbox-radio-label-height - $checkbox-radio-size) / 2;
  display: inline-block;
  width: $toggle-width / 2;
  height: $toggle-height;
  border: $border-width solid $toggle-icon-color-border;
  border-radius: $border-radius;
  background-color: $toggle-icon-color;
  cursor: pointer;
}

.label {
  @include form-checkbox-radio-label-styles(
    $toggle-label-height,
    0,
    $line-height: 2rem
  );
}

.input + .label::before {
  @include form-toggle-inactive(
    $toggle-height,
    $toggle-width,
    $checkbox-radio-top,
    0,
    $form-field-border-color
  );

  border-radius: $border-radius;
}

.input + .label::after {
  content: '';
  position: absolute;
  top: $toggle-height / 2;
  width: $toggle-icon-size;
  height: $toggle-icon-size;
  background: icon-generate-close() no-repeat;
}

// stylelint-disable selector-nested-pattern, no-descending-specificity, selector-max-specificity
.labelPositionBefore {
  .input + .label::before {
    right: -1 * ($toggle-width + 0.525rem);
    left: auto;
  }

  .toggle {
    right: 0;
    left: auto;
  }

  .input ~ .toggle {
    right: -1 * (($toggle-width / 2) + 0.525rem);
  }

  .input:checked ~ .toggle {
    right: -1 * ($toggle-width + 0.525rem);
  }

  .input + .label::after {
    right: -1 * ($toggle-width + (0.525rem / 2));
  }

  .input:checked + .label::after {
    right: -1 * ($toggle-width - 1.05rem);
  }
}

.labelPositionAfter {
  .label {
    padding-left: $toggle-padding-left;
  }

  .toggle {
    left: 0;
  }

  .input:checked ~ .toggle {
    left: $toggle-width / 2;
  }

  .input + .label::after {
    left: ($toggle-width / 4) + 1.05rem;
  }

  .input:checked + .label::after {
    left: ($toggle-width / 2) - 0.95rem;
  }
}

.input:disabled + .label {
  @include form-disabled-state();

  color: $checkbox-disabled-text-color;
}

.input:disabled ~ .toggle {
  @include form-disabled-state();
}

.input:checked + .label::before {
  background: $toggle-color-checked;
}

.input:checked + .label::after {
  background-image: icon-generate-checkmark();
}

.input:focus + .label::before {
  outline: 0;
  box-shadow: $radio-focused-box-shadow;
}

.input:indeterminate + .label::before {
  border: $border-width solid $checkbox-border-color-indeterminate;
}

.input:indeterminate + .label::after {
  display: inline-block;
  border-bottom-color: $checkbox-border-color-indeterminate;
  border-left: 0;
  transform: translate(0, ($checkbox-checkmark-size / 2));
}

.input:focus:checked + .label::before {
  outline: 0;
}

.input:disabled:checked + .label::before {
  background-color: $radio-disabled-background-color;
}

.input:required + .label .labelInner::after {
  content: ' *';
}

.input:checked:disabled ~ .toggle {
  @include form-disabled-state();
}

.input:checked:disabled + .label::before {
  background-color: $checkbox-disabled-background-color;
}

.input:checked:disabled + .label::after {
  $disabled-border-style: ($checkbox-radio-size / 8) solid $checkbox-disabled-checkmark-color;
}

// stylelint-enable

.description,
.error {
  font-size: 0.8rem;
}

.error {
  min-height: 1rem;
  color: $form-invalid-color;
}

.isLabelHidden {
  @include accessibility-hide-text();
}
